# -*- coding: utf-8 -*-

import re
import telebot
import config
import dbworker
import random
import string
from time import gmtime, strftime, sleep

bot = telebot.TeleBot(config.token)

# function generate user code
def gen_code(stringLength):
	lettersAndDigits = string.ascii_letters + string.digits
	return ''.join((random.choice(lettersAndDigits) for i in range(stringLength)))

# function log user messages to log files and admin chat
def log(time, message):
	log_print(time, message.from_user.username, message.chat.id, message.text)
	bot.send_message(509291958, '@{} send(id{}):\n\'{}\''.format(message.from_user.username, message.chat.id, message.text))

# function print log to file
def log_print(time, user, user_id, command):
	log_file = open('message_log.txt', 'a')
	log_file.write('{}:@{}({}) \"{}\"\n'.format(time, user, user_id, command))
	log_file.close()

''' 

	Bot commands

'''
# function handles /start command
@bot.message_handler(commands=["start"])
def cmd_start(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, 'Welcome to AnalisBot, {}'.format(message.from_user.first_name))
	bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –∫–ª—é—á –∏ —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É —Ä–µ—à–∏—Ç—å —ç–∫–∑–∞–º–µ–Ω!\n\n–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?\n–ù–∞–∂–º–∏ —Å—é–¥–∞: /help\n\n–ù–µ—Ç –∫–ª—é—á–∞?\n–ù–∞–∂–º–∏ —Å—é–¥–∞: /buykey')
	bot.send_message(509291958, 'added new user, @{}\nchatid: {}'.format(message.from_user.username, message.chat.id))
	bot.send_message(568371117, 'added new user, @{}\nchatid: {}'.format(message.from_user.username, message.chat.id))
	dbworker.set_state(message.chat.id, config.States.S_KEY.value)

# function handles /reset command
@bot.message_handler(commands=["reset"])
def cmd_reset(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, "–ß—Ç–æ –∂, –Ω–∞—á–Ω—ë–º –ø–æ-–Ω–æ–≤–æ–π. –û—Ç–ø—Ä–∞–≤—å –∫–ª—é—á?")
	dbworker.set_state(message.chat.id, config.States.S_KEY.value)

# function handles /codegen command
@bot.message_handler(commands=['codegen'])
def code_generation(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	if message.chat.id == 568371117 or message.chat.id == 509291958:
		code = gen_code(8)
		dbworker.set_key(code, 1)
		if dbworker.get_key_info(code) == '1':
			bot.send_message(message.chat.id, 'Code generated successful\n')
			bot.send_message(message.chat.id, code)
		else:
			bot.send_message(message.chat.id, 'Oh shit, something going wrong, report was sent\n')
			return
	else:
		bot.send_message(message.chat.id, '–ê—Ç–∞—Ç–∞‚ÄºÔ∏è\n\n–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤!\n')
		return

# function handles /help command
@bot.message_handler(commands=['help'])
def help_message(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	help_output = '–≠—Ç–æ—Ç –±–æ—Ç —Å–∞–º—ã–π –ª—É—á—à–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω –ø–æ –ê–ù–ê–õ–∏–∑—É –î–∞–Ω–Ω—ã—Ö!\n\n'
	help_output += '–ö—É–ø–∏ –∫–ª—é—á –∑–∞ 100‚ÇΩ, –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –º–Ω–µ, —Å–∫–∏–Ω—å —Å–≤–æ–∏ –∑–∞–¥–∞–Ω–∏—è –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º!\n\n'
	help_output += '–ö–∞–∫ —Ç–æ–ª—å–∫–æ —è –ø–æ–π–º—É —á—Ç–æ –∫–ª—é—á –∞–∫—Ç–∏–≤–Ω—ã–π, —è —Ç–µ–±–µ –∑–∞–¥–∞–º –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ!\n\n'
	help_output += '–ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Ç–∞–º –≥–¥–µ –∫—É–ø–∏—Ç—å –∫–ª—é—á https://vk.com/public196319329\n\n'
	help_output += '–£–¥–∞—á–∏ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ!'
	bot.send_message(message.chat.id, help_output)

# function handles /buykey command
@bot.message_handler(commands=['buykey'])
def help_message(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	help_output = '–≠—Ç–æ—Ç –±–æ—Ç —Å–∞–º—ã–π –ª—É—á—à–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω –ø–æ –ê–ù–ê–õ–∏–∑—É –î–∞–Ω–Ω—ã—Ö!\n\n'
	help_output += '–ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –∫—É–ø–∏ –∫–ª—é—á, –æ–Ω —Å—Ç–æ–∏—Ç 100‚ÇΩ –∏ –ø–æ–∫—É–ø–∞–µ—Ç—Å—è –≤ –≥—Ä—É–ø–ø–µ, –∞ –ø–æ—Ç–æ–º –ø—Ä–∏—Ö–æ–¥–∏ –∫–æ –º–Ω–µ –∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏\n\n'
	help_output += '–ö–∞–∫ —Ç–æ–ª—å–∫–æ —è –ø–æ–π–º—É —á—Ç–æ –∫–ª—é—á –∞–∫—Ç–∏–≤–Ω—ã–π, —è —Ç–µ–±–µ –∑–∞–¥–∞–º –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ!\n\n'
	help_output += '–ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Ç–∞–º –≥–¥–µ –∫—É–ø–∏—Ç—å –∫–ª—é—á https://vk.com/public196319329'
	bot.send_message(message.chat.id, help_output)

# function handles /status command
@bot.message_handler(commands=['status'])
def status_message(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	status_output = 'STATUS:\nüü¢Online\n'
	status_output += 'Server datatime: '
	status_output += strftime("%Y-%m-%d %H:%M:%S", gmtime())
	status_output += '\nActive tasks: preformance ({}%)‚úÖ'.format(random.randint(1, 100))
	status_output += '\nYour chatId: '
	status_output += str(message.chat.id)
	status_output += '\nBot version: v1.0.0 Build 1906.47812'
	status_output += '\nBot by member of TBHTA - Telegram Bots High Tech Alliance'
	bot.send_message(message.chat.id, status_output)

# function handles /fix command
@bot.message_handler(commands=['fix'])
def fix_message(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)


# take key from user
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_KEY.value)
def get_key_from_user(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, '–ü—ã—Ç–∞—é—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–≤–æ–π –∫–ª—é—á...');
	print(dbworker.get_key_info(message.text))
	if int(dbworker.get_key_info(message.text)) > 0:
		dbworker.use_key(message.text)
		bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAALxY17ml19ost0i90xYz_w9yP_vDDV7AAJCAANQV40QVWWRW7A7JYEaBA')
		bot.send_message(message.chat.id, '–¢–≤–æ–π –∫–ª—é—á –Ω–∞—Å—Ç–æ—è—â–∏–π!!!\n\n–ò —É —Ç–µ–±–µ –µ—â–µ {} –ø–æ–ø—ã—Ç–æ–∫!!!'.format(dbworker.get_key_info(message.text)))
		bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å —Å–ª—É—à–∞–π —Å—é–¥–∞!\n–ß—Ç–æ–±—ã –≤—Å–µ –±—ã–ª–æ –≥–ª–∞–¥–∫–æ –≤—ã–ø–æ–ª–Ω—è–π –≤—Å–µ —Å—Ç—Ä–æ–≥–æ –ø–æ –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏–∏!!')
		bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAALxZV7mnE5tOPjvLOtWe2lzKPzQ7jW1AAJdAAMK_MIFZjRMJxxv1nIaBA')
		bot.send_message(message.chat.id, '**–ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å**')
		# ask dataset from task1
		bot.send_message(message.chat.id, '–í–æ–∑—å–º–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞')
		bot.send_photo(message.chat.id, open('./service_images/task1.png', 'rb'))
		dbworker.set_state(message.chat.id, config.States.S_TASK1_DATASET.value)
	else:
		bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAALxYV7ml1q5EiXyy-mHZcASeJ9PibpEAAJIAANQV40Qv8jEnTZjskMaBA')
		bot.send_message(message.chat.id, '–ú–Ω–µ –∂–∞–ª—å, –Ω–æ —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –∫–ª—é—á–∞(((\n\n–ù–æ —Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –∫–ª—é—á,–æ–Ω —Å—Ç–æ–∏—Ç –≤—Å–µ–≥–æ 100‚ÇΩ!!!\n\n–ß—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —Ç—ã–∫–Ω–∏ /buykey')

''' 

	TASKS PART

'''

# task1 variant
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK1_DATASET.value)
def task1_1(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö 3—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —É —Ç–µ–±—è?')
	bot.send_photo(message.chat.id, open('./service_images/task1_1_1.png', 'rb'))
	bot.send_photo(message.chat.id, open('./service_images/task1_1_2.png', 'rb'))
	bot.send_photo(message.chat.id, open('./service_images/task1_1_3.png', 'rb'))
	bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å 1, 2 –∏–ª–∏ 3')
	dbworker.set_state(message.chat.id, config.States.S_TASK1_Q3.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK1_Q3.value)
def task1_2(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	print(message.text)
	if int(message.text) < 1 or int(message.text) > 3:
		bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!\n\n–û—Ç–ø—Ä–∞–≤—å 1, 2 –∏–ª–∏ 3")
		return
	else:
		if int(message.text) == 1:
			bot.send_message(message.chat.id, '–ß–µ–º—É —Ä–∞–≤–µ–Ω –∫–≤–∞–Ω—Ç–∏–ª—å –≤ 19 –∑–∞–¥–∞–Ω–∏–∏?\n\n–ß–∏–ª—Å–æ –≤–∏–¥–∞ 0.85')
			bot.send_photo(message.chat.id, open('./service_images/task1_2.png', 'rb'))
			dbworker.set_state(message.chat.id, config.States.S_TASK1_KRVTL.value)
		else:
			bot.send_message(message.chat.id, '**–í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å**')
			bot.send_message(message.chat.id, '–í–æ–∑—å–º–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞')
			bot.send_photo(message.chat.id, open('./service_images/task2.png', 'rb'))
			dbworker.set_state(message.chat.id, config.States.S_TASK2_DATASET.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK1_KRVTL.value)
def task1_2(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	if re.match(r'^-?\d+(?:\.\d+)?$', message.text) is None:
		bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!\n\n–ß–∏–ª—Å–æ –≤–∏–¥–∞ 0.85")
		return
	else:
		bot.send_message(message.chat.id, '**–í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å**')
		bot.send_message(message.chat.id, '–í–æ–∑—å–º–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞')
		bot.send_photo(message.chat.id, open('./service_images/task2.png', 'rb'))
		dbworker.set_state(message.chat.id, config.States.S_TASK2_DATASET.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK2_DATASET.value)
def task2_1(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö 2—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —É —Ç–µ–±—è?\n\n–û—Ç–ø—Ä–∞–≤—å 1 –∏–ª–∏ 2')
	bot.send_photo(message.chat.id, open('./service_images/task2_1_1.png', 'rb'))
	bot.send_photo(message.chat.id, open('./service_images/task2_1_2.png', 'rb'))
	dbworker.set_state(message.chat.id, config.States.S_TASK2_Q1.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK2_Q1.value)
def task2_2(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	if int(message.text) < 1 or int(message.text) > 2:
		bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!\n\n–û—Ç–ø—Ä–∞–≤—å 1 –∏–ª–∏ 2")
		return
	else:
		bot.send_message(message.chat.id, '–ß–µ–º—É —Ä–∞–≤–Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞ –≤ 5 –∑–∞–¥–∞–Ω–∏–∏?\n\n–ß–∏–ª—Å–æ –≤–∏–¥–∞ 0.9')
		bot.send_photo(message.chat.id, open('./service_images/task2_5_1.png', 'rb'))
		dbworker.set_state(message.chat.id, config.States.S_TASK2_BRDR.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK2_BRDR.value)
def task2_3(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	if re.match(r'^-?\d+(?:\.\d+)?$', message.text) is None:
		bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!\n\n–ß–∏–ª—Å–æ –≤–∏–¥–∞ 0.9")
		return
	else:
		bot.send_message(message.chat.id, '–î–ª—è –∫–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ—Å—è—Ç –≥—Ä–∞–Ω–∏—Ü—É –≤ 5 –∑–∞–¥–∞–Ω–∏–∏?')
		bot.send_photo(message.chat.id, open('./service_images/task2_5_2.png', 'rb'))
		bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –¢–û–ß–ù–û —Ç–∞–∫–∂–µ –∫–∞–∫ –≤ –∑–∞–¥–∞–Ω–∏–∏!')
		dbworker.set_state(message.chat.id, config.States.S_TASK2_BRDR_WD.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK2_BRDR_WD.value)
def task2_4(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, '–î–ª—è –∫–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ—Å—è—Ç –≥—Ä–∞–Ω–∏—Ü—É –≤ 4 –∑–∞–¥–∞–Ω–∏–∏?')
	bot.send_photo(message.chat.id, open('./service_images/task2_4.png', 'rb'))
	bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –¢–û–ß–ù–û —Ç–∞–∫–∂–µ –∫–∞–∫ –≤ –∑–∞–∂–∞–Ω–∏–∏!')
	dbworker.set_state(message.chat.id, config.States.S_TASK2_WD.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK2_WD.value)
def task2_5(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, '–ß–µ–º—É —Ä–∞–≤–µ–Ω —É—Ä–æ–≤–Ω—å –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏?\n\n–ß–∏–ª—Å–æ –≤–∏–¥–∞ 0.01')
	bot.send_photo(message.chat.id, open('./service_images/task2_6.png', 'rb'))
	dbworker.set_state(message.chat.id, config.States.S_TASK2_LVL.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK2_LVL.value)
def task2_6(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	if re.match(r'^-?\d+(?:\.\d+)?$', message.text) is None:
		bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!\n\n–ß–∏–ª—Å–æ –≤–∏–¥–∞ 0.01")
		return
	else:
		bot.send_message(message.chat.id, '**–¢—Ä–µ—Ç—å—è —á–∞—Å—Ç—å**')
		bot.send_message(message.chat.id, '–í–æ–∑—å–º–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞')
		bot.send_photo(message.chat.id, open('./service_images/task3.png', 'rb'))
		dbworker.set_state(message.chat.id, config.States.S_TASK3_DATASET.value)


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.S_TASK3_DATASET.value)
def task3_3(message):
	log(strftime("%Y-%m-%d %H:%M:%S", gmtime()), message)
	bot.send_message(message.chat.id, '–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫!\n\n–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç—ã!')
	bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAALxZ17mnv8T8gJ53bX6EZ4v9Mo5oXOgAALNGwAClju6F_j9cZ8iZQaKGgQ')
	bot.send_message(message.chat.id, '–°–æ–±–∏—Ä–∞—é —Ñ–∞–π–ª\n\n–ü—Ä–∏–º–µ—Ä–Ω–æ 10 —Å–µ–∫—É–Ω–¥\n\n–ü–æ—à—É —Ç–µ—Ä–ø–µ–Ω–∏—è!')
	sleep(10)
	bot.send_document(message.chat.id, open('./works/test.xlsx', 'rb'))
	dbworker.set_state(message.chat.id, config.States.S_KEY.value)



bot.polling()
